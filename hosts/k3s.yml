# # configure Kubernetes cluster using k3s
# - name: configure K3S Cluster Nodes
#   hosts:
#     - k3s
#   roles: 
#     - VM_role
#     - git_config_role
#     - git_dotfiles_role
#     - linux_role
#     - drake_role
#     - docker_role
#   tasks:

- name: Manager-Specific Node Configuration
  hosts:
    - k3s_managers
  roles:
  tasks:

    # curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    # sudo apt-get install apt-transport-https --yes
    # echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    # sudo apt-get update
    # sudo apt-get install helm

    - name: Download helm key
      ansible.builtin.get_url:
        url: https://baltocdn.com/helm/signing.asc
        # dest: /usr/share/keyrings/helm.gpg
        dest: /usr/share/keyrings/helm.asc
        mode: '0440'

    - name: install pre-requisite packages
      ansible.builtin.apt:
        name: apt-transport-https
        state: latest

    - name: Add Helm Repository
      ansible.builtin.apt_repository:
        # repo: deb [arch=amd64 signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/helm.asc] https://baltocdn.com/helm/stable/debian/ all main
        state: present
        filename: helm-stable-debian

    - name: update apt, and install helm
      ansible.builtin.apt:
        update_cache: true
        name: helm
        state: latest


- name: Worker-Specific Node Configuration
  hosts:
    - k3s_workers
  roles:
    - nfs_base_role
    - nfs_music_role
    - nfs_video_role
    - nfs_staging_role
  tasks:

    - name: NFS pre-requisites
      apt:
        name:
          - nfs-common
        state:  latest

    - name: check for mount dir
      stat:
        path: /mnt/k3s-data
      register: mnt_k3s

    - name: create the dir, if needed
      file:
        path:   /mnt/k3s-data
        state:  directory
      when: not mnt_k3s.stat.exists

    - name: mount the k3s share
      mount:
        src:    192.168.13.252:/mnt/k3s-data
        path:   /mnt/k3s-data
        fstype: nfs
        opts:   rw,nolock,tcp
        state:  mounted