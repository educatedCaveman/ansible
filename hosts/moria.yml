---
- name: configure Moria
  hosts:
    - moria
  # roles:
  #   - VM_role
  #   - git_dotfiles_role
  #   - git_scripts_role
  #   - VM_netplan_MTU
  #   - apt_client_role
  #   - linux_role
  vars:
    - driver_file:  "/home/drake/NVIDIA-Linux-x86_64-460.67.run"
    - driver_url: "https://international.download.nvidia.com/XFree86/Linux-x86_64/460.67/NVIDIA-Linux-x86_64-460.67.run"
    - t_rex_dir:  "/home/drake/t_rex"
    - t_rex_archive:  "t-rex-0.19.12-linux-cuda11.1.tar.gz"
    - t_rex_release_url:  "https://github.com/trexminer/T-Rex/releases/download/0.19.12/t-rex-0.19.12-linux-cuda11.1.tar.gz"
  tasks:

    # install dependencies:
    - name: Install nVidia Driver Dependencies
      apt:
        name:
          - build-essential 
          - libglvnd-dev 
          - pkg-config
        state:  latest

    # nvidia driver
    - name: check for the driver being present already
      stat:
        path: "{{ driver_file }}"
      register: driver

    - name: retrieving the nVidia driver
      get_url:
        url:  "{{ driver_url }}"
        dest: "{{ driver_file }}"
      when: not driver.stat.exists

    - name: add execute permissions
      file:
        path: "{{ driver_file }}"
        mode: a+x
      when: not driver.stat.exists

    # trex miner
    # also set up custom run script?

    # check for t-rex folder
    # if absent, create
    # if absent, download release
    # if absent, extract

    - name: check for existing T-Rex folder
      stat:
        path: "{{ t_rex_dir }}"
      register: trex_dir

    - name: create T-Rex folder
      file:
        path: "{{ t_rex_dir }}"
        state:  directory
      when: not trex_dir.stat.exists

    - name: retrieving T-Rex
      get_url:
        url:  "{{ t_rex_release_url }}"
        dest: "{{ t_rex_dir }}/{{ t_rex_archive }}"
      when: not trex_dir.stat.exists

    - name: unzip T-Rex
      unarchive:
        src:  "{{ t_rex_dir }}/{{ t_rex_archive }}"
        dest: "{{ t_rex_dir }}"
        remote_src: yes
        mode: a+x
      


# TODO: special tmux.conf
# check if config already exists
# if exist, but not link:
# - check if config exists in dotfiles
# - remove
# - link to dotfiles



# permissions
- name: Apply the Drake Role
  hosts:
    - moria
  roles:
    - drake_role
  tasks:

- name: Manual Config
  hosts:
    - moria
  tasks:  
# debug messages:
    - name: driver version
      debug:
        msg: 
          - "the following driver versions may be out of date."
          - "check the following URL for the latest version:"
          - "https://www.nvidia.com/Download/index.aspx?lang=en-us"

    - name: T-Rex version
      debug:
        msg: 
          - "the following T-Rex version may be out of date."
          - "check the following URL for the latest version:"
          - "https://github.com/trexminer/T-Rex/releases"

    