# base docker config
- name: configure Docker Swarm Cluster (DEV)
  hosts:
    - dev_swarm_managers
    - dev_swarm_workers
  roles:
    - VM_role            # base LXC container config
    - git_dotfiles_role   # deploy the dotfiles repo
    - VM_netplan_MTU     # use the mtu9000 netplan config
    - apt_client_role
    - linux_role          # base linux configs
    - docker_role
    - drake_role          # drake home directory permissions
  tasks:
    - name: placeholder
      debug:
        msg:  this is a placeholder

# gluster for managers
- name: configure GlusterFS for manager Nodes (DEV)
  hosts:
    - dev_swarm_managers
  roles:
    - gluster_role
  vars:
    - cluster_name: "portainer_data"
  tasks:

# gluster for workers:
- name: configure GlusterFS for worker Nodes (DEV)
  hosts:
    - dev_swarm_workers
  roles:
    - gluster_role
  vars:
    - cluster_name: "docker_data"
  tasks:

# create the swarm:
- name: initiate the swarm
  hosts:  dev_swarm_manager_01
  gather_facts: yes
  tasks:

    - name: initiate the swarm, gather tokens
      community.docker.docker_swarm:
        state: present
      register: swarm

    - name: register dummy manager host
      add_host:
        name: "SWARM_INFO"
        manager_endpoint: "{{ inventory_hostname }}:2377"
        manager_token:    "{{ swarm.swarm_facts.JoinTokens.Manager }}"
        worker_token:     "{{ swarm.swarm_facts.JoinTokens.Worker }}"

    - name: show manager token
      debug:
        msg:  "{{ hostvars['SWARM_INFO']['manager_token'] }}"

    - name: show worker token
      debug:
        msg:  "{{ hostvars['SWARM_INFO']['worker_token'] }}"

    - name: show manager IP/hostname and port
      debug:
        msg:  "{{ hostvars['SWARM_INFO']['manager_endpoint'] }}"

- name: Add Manager Nodes
  hosts:  dev_swarm_managers:!dev_swarm_manager_01
  tasks:

    - name: Add Manager Nodes
      community.docker.docker_swarm:
        state: join
        join_token:   "{{ hostvars['SWARM_INFO']['manager_token'] }}"
        remote_addrs: "{{ hostvars['SWARM_INFO']['manager_endpoint'] }}"

- name: Add Worker Nodes
  hosts:  dev_swarm_workers
  tasks:

    - name: Add Worker Nodes
      community.docker.docker_swarm:
        state: join
        join_token:   "{{ hostvars['SWARM_INFO']['worker_token'] }}"
        remote_addrs: "{{ hostvars['SWARM_INFO']['manager_endpoint'] }}"

# deploy portainer?