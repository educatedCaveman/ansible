- name: configure dilithium (spare pi)
  hosts:  dilithium
  roles:
    - git_dotfiles_role   # deploy the dotfiles repo
    - git_ansible_role    # deploy the ansible repo
    - git_scripts_role    # deploy the scripts repo
    - linux_role          # base linux configs
    - client_ssh_keys
    - drake_role          # drake home directory permissions
  tasks:

    # install ansible
    - name: install ansible, docker
      apt:
        name:
          - ansible
          - ipmitool
          - nodejs
          - httpie
          - 
        state:  latest

    # inventory file
    - name: check existing hosts.ini file
      stat:
        path: /etc/ansible/hosts.ini
      register: hosts

    - name: remove existing host file if it isn't a link
      file:
        path: /etc/ansible/hosts.ini
        state:  absent
      when: 
        - hosts.stat.islnk is defined
        - hosts.stat.islnk == False

    - name: link new hosts file
      file:
        src:  /home/drake/ansible/hosts.ini
        dest: /etc/ansible/hosts
        state:  link

    # config file
    - name: check existing ansible.cfg file
      stat:
        path: /etc/ansible/ansible.cfg
      register: config

    - name: remove existing ansible.cfg file if it isn't a link
      file:
        path: /etc/ansible/ansible.cfg
        state:  absent
      when: 
        - config.stat.islnk is defined
        - config.stat.islnk == False

    - name: link new ansible.cfg file
      file:
        src:  /home/drake/ansible/ansible.cfg
        dest: /etc/ansible/ansible.cfg
        state:  link

    # roles
    - name: check existing ansible.cfg file
      stat:
        path: /etc/ansible/ansible.cfg
      register: roles

    - name: remove existing roles folder/link
      file:
        path: /etc/ansible/roles
        state:  absent
      when: 
        - roles.stat.islnk is defined
        - roles.stat.islnk == False

    - name: link new roles folder
      file:
        src:  /home/drake/ansible/roles
        dest: /etc/ansible/roles
        state:  link

    # r720 fan control, every minute
    - name: set up r720 fan control
      cron:
        name: r720_fan_control
        user: drake
        job:  "/bin/bash /home/drake/scripts/cron/r720_fan_control.sh"  

    # TODO: gatus, requires docker
    - name: install gatus apt pre-requisites
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - python3-pip
          - fuse-overlayfs

    - name: install pip packages
      pip:
        name: docker

    - name: Add Docker GPG apt Key (raspbian)
      apt_key:
        url: https://download.docker.com/linux/raspbian/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: "deb https://download.docker.com/linux/raspbian {{ ansible_distribution_release }} stable"
        state: present

    - name: Update apt and install docker-ce
      apt: 
        name: 
          - docker-ce 
          - docker-ce-cli 
          - containerd.io
          - docker-compose
        state: latest

    - name: add drake to the docker group
      user:
        name: drake
        group:  docker
        append: yes

    - name: start and enable docker
      systemd:
        name: docker
        state:  restarted
        enabled:  yes


    # jenkins repo
    - debug:
        msg:  "deployment of jenkins repo is handled by jenkins"
