- name: configure seedbox
  hosts:  seedbox
  roles:
    - LXC_role            # base LXC container config
    - git_dotfiles_role   # deploy the dotfiles repo
    - git_scripts_role
    - apt_client_role
    - LXC_netplan_MTU     # use the mtu9000 netplan config
    - linux_role          # base linux configs
    - client_ssh_keys
    - drake_role          # drake home directory permissions
    - nfs_base_role       
    - nfs_video_role
    - nfs_music_role
    - nfs_staging_role
    - role: telegraf_role
      vars:
        telegraf_config:  'telegraf_base.conf'
  vars:
    - config_dir: '/home/qbittorrent-nox/.config/qBittorrent'
    - dotfiles_dir: '/home/drake/dotfiles/qbittorrent'
  tasks:

  - name: install qbittorrent and related dependencies
    apt:
      name:
        - qbittorrent-nox
        - openvpn 
        - openvpn-systemd-resolved  
        - gnupg
        - ca-certificates
        - curl
        - mediainfo
        - sqlite3
        - libchromaprint-tools
        - python3-dev 
        - python3-pip 
        - python3-distutils
        - unzip
        
      state:  latest

  - name: install required python packages
    pip:
      name:
        - requests
        - discord
      state:  latest


  #* create users and groups
  # base system users and groups
  - name: create the system users
    include_role:
      name: create_system_user_role
    vars:
      system_user: "{{ item }}"
    loop:
      - qbittorrent-nox
      - media
      # - sonarr
      # - radarr
      # - lidarr
      # - bazarr
      # - prowlarr

  # add the users to the media group
  # drake might be redundant
  - name: add the users to the media group
    user:
      name: "{{ item }}"
      groups:
        - media
        - "{{ item }}"
      append: yes      
    loop:
      - drake
      - qbittorrent-nox
      # - sonarr
      # - radarr
      # - lidarr
      # - bazarr
      # - prowlarr


  #* qBittorrent configs
  - name: check for existing qBittorrent.conf
    stat:
      path: "{{ config_dir }}/qBittorrent.conf"
    register: conf_1

  - name: remove existing qBittorrent.conf
    file:
      path:   "{{ config_dir }}/qBittorrent.conf"
      state:  absent
    when: 
      - conf_1.stat.exists
      - conf_1.stat.islnk is defined
      - conf_1.stat.islnk == False

  - name: link new qBittorrent.conf
    file:
      src:  "{{ dotfiles_dir }}/qBittorrent.conf"
      dest: "{{ config_dir }}/qBittorrent.conf"
      owner:  qbittorrent-nox
      group:  qbittorrent-nox
      state:  link
    when: 
      - conf_1.stat.exists
      - conf_1.stat.islnk is defined
      - conf_1.stat.islnk == False

  - name: check for existing qBittorrent-data.conf
    stat:
      path: "{{ config_dir }}/qBittorrent-data.conf"
    register: conf_2

  - name: remove existing qBittorrent-data.conf
    file:
      path:   "{{ config_dir }}/qBittorrent-data.conf"
      state:  absent
    when: 
      - conf_2.stat.exists
      - conf_2.stat.islnk is defined
      - conf_2.stat.islnk == False

  - name: link new qBittorrent-data.conf
    file:
      src:  "{{ dotfiles_dir }}/qBittorrent-data.conf"
      dest: "{{ config_dir }}/qBittorrent-data.conf"
      owner:  qbittorrent-nox
      group:  qbittorrent-nox
      state:  link
    when: 
      - conf_2.stat.exists
      - conf_2.stat.islnk is defined
      - conf_2.stat.islnk == False


  # TODO: install the openvpn config?
  #* ExpressVPN
  # download the .deb
  # - name: download and install ExpressVPN
  #   apt:
  #     deb:  https://www.expressvpn.works/clients/linux/expressvpn_3.14.0.4-1_amd64.deb

  # firewall rules:
  # allow ssh in and out
  # allow openvpn port (1195?) in and out
  # block all other access


  # cleanup the *arrs
  - name: cleanup the *arrs /var/lib/
    file:
      path:   "/var/lib/{{ item }}"
      state:  absent
    loop:
      - sonarr
      - radarr
      - lidarr
      - bazarr
      - prowlarr

  - name: cleanup the *arrs /opt
    file:
      path:   "/opt/{{ item }}"
      state:  absent
    loop:
      - Sonarr
      - Radarr
      - Lidarr
      - Bazarr
      - Prowlarr


  - name: restart sonarr.service
    systemd:
      name:     sonarr.service
      state:    stopped
      enabled:  no
