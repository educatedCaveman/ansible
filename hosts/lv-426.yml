# base docker config
- name: configure Docker Swarm Host (DEV)
  hosts:
    - lv_426
  roles:
    - VM_role
    - git_config_role
    - git_dotfiles_role
    - git_scripts_role
    - VM_netplan_MTU
    - apt_client_role
    - linux_role
    - client_ssh_keys
    - docker_role
    - drake_role
    - nfs_base_role
    - nfs_backup_role
    - nfs_music_role
    - nfs_video_role
    - nfs_staging_role
    - nfs_docs_role
    - nfs_pics_role
    - netdata_role
  tasks:

    - name: initiate the swarm (single node)
      community.docker.docker_swarm:
        state: present

    # need to format the drive
    - name: check the partitions
      community.general.parted:
        device: /dev/vdb
        unit: MiB

    - name: create partition
      community.general.parted:
        device: /dev/vdb
        number: 1
        label:  gpt
        state:  present

    - name: create filesystem
      community.general.filesystem:
        fstype: ext4
        state:  present
        device: /dev/vdb1

    # create the mount directory, if needed:
    - name: check if the directory exists
      stat:
        path: /docker
      register: docker_mount

    - name: create the device mount directory
      file:
        path: /docker
        state:  directory
        recurse:  yes
      when: not docker_mount.stat.exists

    - name: mount the drive
      mount:
        src:  /dev/vdb1
        path: /docker
        fstype: ext4
        state:  mounted

    # cron jobs:
    - name: cron backup, daily
      cron:
        name:   daily_backup
        minute: "0"
        hour:   "0"
        job:    "/bin/bash /home/drake/scripts/cron/backup_docker_daily.sh"

    - name: cron backup, weekly
      cron:
        name:   weekly_backup
        minute: "0"
        hour:   "1"
        day:    "1"
        job:    "/bin/bash /home/drake/scripts/cron/backup_docker_weekly.sh"

    - name: YTDL file sync
      cron:
        name:   ytdl_file_sync
        job:    "/bin/bash /docker/docker-compose/ytdl/sync_to_NFS.sh"

    # folder for portainer
    - name: create the portainer directory
      file:
        path: /docker/portainer
        state:  directory
        recurse:  no

    # install custom docker daemon.json
    # - name: install custom daemon.json
    #   file:
    #     src:    /home/drake/dotfiles/docker/daemon_dev.json
    #     dest:   /etc/docker/daemon.json
    #     state:  link

    # restart docker
    - name: restart docker.service
      systemd:
        name: docker.service
        state:  restarted
        enabled:  yes

    # setup for manual steps
    - name: deploying the custom portianer stack file
      get_url:
        url:  "https://raw.githubusercontent.com/educatedCaveman/docker-lab/dev_test/scripts/swarm/portainer-agent-stack.yml"
        dest: /tmp/

    - name: setting up portainer
      debug:
        msg:
          - "to install/start portainer, run the following:" 
          - docker stack deploy -c /tmp/portainer-agent-stack.yml portainer

    # # https://docs.technotim.live/posts/grafana-loki/
    # - name: install docker plugins
    #   debug:
    #     msg:
    #       - "for grafana loki, the following command must be run manually:"
    #       - docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions
