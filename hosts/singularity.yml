- name: configure singularity
  hosts:  singularity
  roles:
    - LXC_role            # base LXC container config
    - git_dotfiles_role   # deploy the dotfiles repo
    - git_scripts_role
    - apt_client_role
    # - LXC_netplan_MTU     # use the mtu9000 netplan config
    - linux_role          # base linux configs
    # - client_ssh_keys
    - drake_role          # drake home directory permissions
    - nfs_base_role       
    - nfs_backup_role
  tasks:

  # check if pihole is already installed
  - name: check for existing pi-hole install
    stat:
      path: /etc/pihole
    register: pihole_install

  # pihole-specific dotfiles:
  # note: will use gravity sync to sync the rest
  # dnsmasq (CNAME)
  - name: check for existing cname.conf
    stat:
      path: /etc/dnsmasq.d/05-pihole-custom-cname.conf
    register: cname_conf
    when:
      - pihole_install.exists
      - pihole_install.isdir is defined
      - pihole_install.isdir == True

  - name: remove existing cname.conf
    file:
      path: /etc/dnsmasq.d/05-pihole-custom-cname.conf
      state:  absent
    when: 
      - cname_conf.stat.exists
      - cname_conf.stat.islnk is defined
      - cname_conf.stat.islnk == False

  - name: link new cname.conf
    file:
      src:  /home/drake/dotfiles/pihole/cname.conf
      dest: /etc/dnsmasq.d/05-pihole-custom-cname.conf
      owner:  root
      group:  root
      state:  link
    when: 
      - cname_conf.stat.exists
      - cname_conf.stat.islnk is defined
      - cname_conf.stat.islnk == False

  # custom.list
  - name: check for existin custom.list
    stat:
      path: /etc/pihole/custom.list
    register: cust_list
    when:
      - pihole_install.exists
      - pihole_install.isdir is defined
      - pihole_install.isdir == True

  - name: remove existing custom.list
    file:
      path: /etc/pihole/custom.list
      state:  absent
    when: 
      - cust_list.stat.exists
      - cust_list.stat.islnk is defined
      - cust_list.stat.islnk == False

  - name: link new custom.list
    file:
      src:  /home/drake/dotfiles/pihole/custom.list
      dest: /etc/pihole/custom.list
      owner:  root
      group:  root
      state:  link
    when: 
      - cust_list.stat.exists
      - cust_list.stat.islnk is defined
      - cust_list.stat.islnk == False
  
  # FTL conf
  - name: check for existin pihole-FTL.conf
    stat:
      path: /etc/pihole/pihole-FTL.conf
    register: ftl_conf
    when:
      - pihole_install.exists
      - pihole_install.isdir is defined
      - pihole_install.isdir == True

  - name: remove existing pihole-FTL.conf
    file:
      path: /etc/pihole/pihole-FTL.conf
      state:  absent
    when: 
      - ftl_conf.stat.exists
      - ftl_conf.stat.islnk is defined
      - ftl_conf.stat.islnk == False

  - name: link new pihole-FTL.conf
    file:
      src:  /home/drake/dotfiles/pihole/pihole-FTL.conf
      dest: /etc/pihole/pihole-FTL.conf
      owner:  root
      group:  root
      state:  link
    when:
      - ftl_conf.stat.exists
      - ftl_conf.stat.islnk is defined
      - ftl_conf.stat.islnk == False

  # backup directory:
  - name: create pihole backup folder
    file:
      path: /mnt/mobius/Backup/pihole
      state:  directory

  # python dependencies for the scripts
  - name: install pip packages
    pip:
      name: tabulate

  # CRON
  - name: setup pihole backup script
    cron:
      name: pihole backup
      minute: "0"
      hour: "2"
      job: "/bin/bash /home/drake/scripts/pihole/pihole_backup.sh"

  - name: setup TMUX autostart check
    cron:
      name: tmux_run_check
      user: drake
      job: "/bin/bash /home/drake/scripts/cron/tmux_check.sh pihole"

  # Pi-Hole
  - debug:
      msg:  "configuration of pihole must be done manually"
    when:
      - pihole_install.exists == False

  - debug:
      msg:  "configuration of gravity-sync must be done manually"
    when:
      - pihole_install.exists == False
