---
# tasks file for gluster_dev_mgr_role

# on all hosts:

# configure disks:
# - partition
# - mkfs
# - create mount dir
# - add disks to fstab
# - only want to do all of this once.

# - name: Configure ZSH
#   import_tasks: zsh.yml

# partition the drive
- name: check the partitions
  community.general.parted:
    device: /dev/vdb
    unit: MiB

- name: create partition
  community.general.parted:
    device: /dev/vdb
    number: 1
    label:  gpt
    state:  present

# create the filesystem
- name: create filesystem
  community.general.filesystem:
    fstype: ext4
    state:  present
    device: /dev/vdb1

# create the mount directory:
- name: create the device mount directory
  file:
    path: /gluster/bricks/1
    state:  directory
    recurse:  yes

- name: mount the drive
  mount:
    src:  /dev/vdb1
    path: /gluster/bricks/1
    fstype: ext4
    state:  mounted
    
- name: create the folder gluster
  file:
    path: /gluster/bricks/1/brick
    state:  directory
    recurse:  no

# add hostsfile records
# - or use the local DNS entries?
# - if so, how to get them when creating the glusterFS
# - may not be necessary

# gluster:
# - install glusterFS
# - enable it

# install gluster
- name: install gluster
  apt:
    name: glusterfs-server
    state:  present

# start the service
- name: start gluster
  systemd:
    name: glusterd
    state:  started
    enabled:  yes
    
# use ansible glusterfs to setup the cluster

# - name: testing hostvars
#   debug:
#     msg:  "{{ play_hosts }}"

# - name: testing a loop
#   debug:
#     msg:  "{{ item }}"
#   loop: "{{  cluster_hosts  }}"

- name: Create a trusted storage pool
  gluster.gluster.gluster_peer:
    state: present
    nodes: "{{ play_hosts }}"
  # loop: "{{ play_hosts }}"


# - name: test single loop
#   shell:
#     cmd:  gluster peer probe "{{ item }}"
#   loop: "{{ play_hosts }}"
  # when: inventory_hostname == play_hosts[0]

# - name: probe the peers
#   shell:
#     cmd:  gluster peer probe "{{ item }}"
#   loop: "{{ play_hosts }}"
#   when: inventory_hostname == play_hosts[0]

# add the gluster volume to the fstab (mount)

# - name: see if we can get the lenth of the play_hosts variable
#   debug:
#     msg:  "{{ play_hosts | length }}"

- name: create gluster volume
  gluster.gluster.gluster_volume:
    state: present
    replicas: "{{ play_hosts | length }}"
    name: test1
    bricks: /gluster/bricks/1
  run_once: true

- name: start gluster volume
  gluster.gluster.gluster_volume:
    state: started
    name: test1


