- name: configure test hosts
  hosts:  test_hosts
  gather_facts: yes
  roles:
    # - VM_role
    # - git_dotfiles_role
    # - VM_netplan_MTU
    # - apt_client_role
    # - linux_role
    - docker_role
    - drake_role
  vars:
    - cluster_name: "swarm_data"
  tasks:



  # instead of this, I should only do it on 1 host (the first master)
  # and register the needed output of swarm into one or more dummy
  # hosts

  # then on the remaining hosts, proceed with adding them to the swarm 
  # with the apropriate roles

- name: initiate the swarm
  # hosts:  dev_swarm_manager_01
  hosts:  192.168.13.250
  gather_facts: yes
  tasks:

    - name: initiate the swarm, gather tokens
      community.docker.docker_swarm:
        state: present
      register: swarm

    - name: register dummy manager host
      add_host:
        name: "SWARM_INFO"
        manager_IP:     "{{ inventory_hostname }}"
        manager_port:   "2377"
        manager_token:  "{{ swarm.swarm_facts.JoinTokens.Manager }}"
        worker_token:   "{{ swarm.swarm_facts.JoinTokens.Worker }}"

    # - name: register dummy worker host
    #   add_host:
    #     name: "SWARM_WKR"
    #     token:  "{{ swarm.swarm_facts.JoinTokens.Worker }}"

- name: test dummy hosts
  # hosts:  dev_swarm_managers:!dev_swarm_manager_01
  hosts:  192.168.13.251
  tasks:

    - name: manager token
      debug:
        msg:  "{{ hostvars['SWARM_INFO']['manager_token'] }}"

    - name: worker token
      debug:
        msg:  "{{ hostvars['SWARM_INFO']['worker_token'] }}"

    - name: manager IP
      debug:
        msg:  "{{ hostvars['SWARM_INFO']['manager_IP'] }}"

    - name: manager port
      debug:
        msg:  "{{ hostvars['SWARM_INFO']['manager_port'] }}"

    # - name: manager inventory hostname
    #   debug:
    #     msg:  "{{ hostvars['dev_swarm_manager_01']['inventory_hostname'] }}"

  # - name: configure swarm
  #   community.docker.docker_swarm:
  #     state: present
  #   register: swarm
  #   when: inventory_hostname == play_hosts[0]

  # - name: debug
  #   debug:
  #     msg:  "{{ swarm }}"

  # - name: manager token
  #   debug:
  #     msg:  "{{ swarm.swarm_facts.JoinTokens.Manager }}"

  # - name: worker token
  #   debug:
  #     msg:  "{{ swarm.swarm_facts.JoinTokens.Worker }}"
