---
- name: configure ubuntu hosts
  hosts: ubuntu_debian_hosts
  ignore_unreachable: yes
  tasks:

    - name: set timezone
      timezone:
        name: America/New_York

    - name: update packages
      apt:
        name: '*'
        state: latest

    - name: upgrade packages
      apt:
        upgrade:  safe

    - name: ensure a list of packages installed
      apt:
        name: 
          - neovim
          - neofetch
          - zsh
          - tmux
          - git
          - htop
          - tree
          - curl
          - sqlite3
          # - netdata
          - python3
          - python3-pip
          - ansible
          - lastpass-cli
          - nmon
          - ncdu
          - dstat
          - saidar
          - ccze
          - lm-sensors

    #change shell
    - name: change to ZSH
      user:
        name: drake
        shell: /usr/bin/zsh
    
    #deploy dotfiles repo
    - git:
        repo: 'https://github.com/educatedCaveman/dotfiles.git'
        dest: /home/drake/dotfiles
        force:  yes

    #create Vundle directory, which also creates the nvim directory
    - name: create NeoVim and Vundle directories
      file:
        path: /home/drake/.config/nvim/bundle
        state: directory
        recurse: yes
    
    #Vundle
    - name: verify Vundle directory exists
      stat:
        path: /home/drake/.config/nvim/bundle
      register: stat_nvim_bundle
    
    - name: cloning Vundle
      git:
        repo: 'https://github.com/VundleVim/Vundle.vim.git'
        dest: /home/drake/.config/nvim/bundle/Vundle.vim
      when: stat_nvim_bundle.stat.exists
    
    #oh-my-zsh
    #clone the repo 
    - name: Cloning  oh-my-zsh
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh
        dest: /home/drake/.oh-my-zsh
      #when: not stat_oh_my_zsh_result.stat.exists

    - name: Check if .oh-my-zsh exists
      stat:
        path: /home/drake/.oh-my-zsh
      register: stat_oh_my_zsh_result
    
    #check if .zshrc exists:
    - name: checking for .zshrc
      stat: 
        path: /home/drake/.zshrc
      register: stat_zshrc
    
    - name: link .zshrc
      file:
        src: /home/drake/dotfiles/zsh/zshrc
        dest: /home/drake/.zshrc
        state: link
      when: (not stat_zshrc.stat.exists) and stat_oh_my_zsh_result.stat.exists  
    
    #check if .zsh_aliases exists:
    - name: checking for .zsh_aliases
      stat: 
        path: /home/drake/.zsh_aliases
      register: stat_zsh_aliases
    
    - name: link .zsh_aliases
      file:
        src: /home/drake/dotfiles/zsh/zsh_aliases
        dest: /home/drake/.zsh_aliases
        state: link
      when: (not stat_zsh_aliases.stat.exists) and stat_oh_my_zsh_result.stat.exists
    
    #check if .zsh-theme exists:
    - name: checking for .zsh-theme
      stat: 
        path: /home/drake/.oh-my-zsh/custom/themes/less-fishy.zsh-theme
      register: stat_zsh_theme
    
    - name: link .zsh-theme
      file:
        src: /home/drake/dotfiles/zsh/less-fishy.zsh-theme
        dest: /home/drake/.oh-my-zsh/custom/themes/less-fishy.zsh-theme
        state: link
      when: (not stat_zsh_theme.stat.exists) and stat_oh_my_zsh_result.stat.exists

    #zsh plugin from git:
    - name: cloning zsh-autosuggestions
      git:
        repo: 'https://github.com/zsh-users/zsh-autosuggestions'
        dest: /home/drake/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      when: stat_oh_my_zsh_result.stat.exists

    #neovim
    - name: checking for init.vim
      stat: 
        path: /home/drake/.config/nvim/init.vim
      register: stat_nvim
    
    - name: link init.vim
      file:
        src: /home/drake/dotfiles/init.vim
        dest: /home/drake/.config/nvim/init.vim
        state: link
      when: not stat_nvim.stat.exists
    
    #set home directory permissions
    - name: set home permissions
      file:
        path: /home/drake
        state: directory
        recurse: yes
        owner: drake
        group: drake

    #set ssh directory permissions
    - name: set ssh permissions
      file:
        path:     /home/drake/.ssh
        state:    directory
        owner:    drake
        group:    drake
        mode:     '0700'

    #set ssh directory permissions
    - name: set ssh permissions
      file:
        path:     /home/drake/.ssh/authorized_keys
        state:    file
        owner:    drake
        group:    drake
        mode:     '0600'
    
    # tweak MOTD:
    - name: test if first MOTD file is present
      stat:
        path: /etc/update-motd.d/10-help-text
      register: help_text_file
    
    - name: disable the helper text in the MOTD
      file: 
        path: /etc/update-motd.d/10-help-text
        mode: 0644
      when: help_text_file.stat.exists

    # tweak MOTD:
    - name: test if news MOTD file is present
      stat:
        path: /etc/update-motd.d/50-motd-news
      register: news_text_file
    
    - name: disable the news text in the MOTD
      file: 
        path: /etc/update-motd.d/50-motd-news
        mode: 0644
      when: news_text_file.stat.exists

    # tweak MOTD:
    - name: delete the raspbian MOTD file
      file: 
        path: /etc/motd
        state:  absent

    # copy over .zsh_secrets
    - name: copy .zsh_secrets
      copy:
        src:  /home/drake/.zsh_secrets
        dest: /home/drake/.zsh_secrets
        owner:  drake
        group:  drake
        mode: '0644'

    # # link netdata dotfiles
    # # netdata.conf
    # - name: remove the existing netdata.conf
    #   file:
    #     path: /etc/netdata/netdata.conf
    #     state:  absent

    # - name: link netdata.conf
    #   file:
    #     src:  /home/drake/dotfiles/netdata/netdata.conf
    #     dest: /etc/netdata/netdata.conf
    #     state:  link

    # # health_alarm_notify.conf
    # # no longer set to send slack notifications, but doesnt hurt to keep this in place
    # - name: remove the existing health_alarm_notify.conf
    #   file:
    #     path: /etc/netdata/health_alarm_notify.conf
    #     state:  absent

    # - name: link health_alarm_notify.conf
    #   file:
    #     src:  /home/drake/dotfiles/netdata/health_alarm_notify.conf
    #     dest: /etc/netdata/health_alarm_notify.conf
    #     state:  link

    # # systemd restart and enable netdata
    # - name: enable and restart netdata
    #   systemd:
    #     name: netdata
    #     state:  restarted
    #     enabled:  yes

- name: Install 'qemu-guest-agent' on VMs only (not LXC containers)
  hosts: ubuntu_debian_VM
  ignore_unreachable: yes
  tasks:

    - name: ensure a list of packages installed
      apt:
        name: 
          - qemu-guest-agent