---
- name: configure local apt-mirror
  hosts: apt_mirror
  tasks:

    - name: update packages
      apt:
        name: '*'
        state: latest

    - name: install NFS and apache
      apt:
        name: 
          - nfs-common
          - apache2
        state:  latest

    #deploy dotfiles repo
    - name: deploy dotfiles
      git:
        repo: 'https://github.com/educatedCaveman/dotfiles.git'
        dest: /home/drake/dotfiles
        force:  yes

    #deploy dotfiles repo
    - name: deploy scripts
      git:
        repo: 'https://github.com/educatedCaveman/scripts.git'
        dest: /home/drake/scripts
        force:  yes

    # set permissions
    - name: set permissions on home directory
      file:
        path: /home/drake
        state:  directory
        recurse:  yes
        owner:  drake
        group:  drake

    #initial mount path check 
    - name: create NFS folder
      file:
        path: /var/www/html/ubuntu
        owner:  www-data
        group:  www-data
        state:  directory
        recurse:  yes

    - name: check for NFS folder
      stat:
        path: /var/www/html/ubuntu
      register: mobius

    # mount the APT share:
    - name: Mount the APT share... 
      mount:
        src: 192.168.11.2:/mnt/storage_node/APT
        path: /var/www/html/ubuntu
        fstype: nfs 
        opts: rw,nolock,tcp
        state: mounted
      when: mobius.stat.exists

    # make sure apache2 is running
    - name: ensure apache2 is running and enabled
      systemd:
        name: apache2.service
        state: restarted
        enabled: yes

    - name: ensure a list of packages installed
      apt:
        name:
          - apt-mirror
        state:  latest

    # check if mirror.list is present
    - name: Check if mirror.list exists
      stat:
        path: /etc/apt/mirror.list
      register: mirror_list
    
    # emove mirror.list if present
    - name: delete mirror.list if it exists
      file: 
        path: /etc/apt/mirror.list
        state:  absent
      when: mirror_list.stat.exists

    # link the mirror.list file
    - name: link mirror.list
      file:
        src: /home/drake/dotfiles/apt_cache_mirror/mirror.list
        dest: /etc/apt/mirror.list
        state: link

    # set permissions on /var/www/html/ubuntu/var:
    - name: create var folder
      file:
        path: /var/www/html/ubuntu
        owner:  www-data
        group:  www-data
        state:  directory
        recurse:  yes
    
    # copy postmirror.sh
    - name: copy postmirror.sh to /var/www/html/ubuntu/var
      copy:
        src: /var/spool/apt-mirror/var/postmirror.sh
        dest: /var/www/html/ubuntu/var/postmirror.sh
        remote_src: yes

    # set cron to run apt-mirror at 1AM every day
    - name: set cron to run apt-mirror at 1AM every day
      cron:
        name: apt-mirror
        minute: "0"
        hour: "1"
        job: "/usr/bin/apt-mirror"

# # all ubuntu hosts:
# - name: configure ubuntu host to use local apt-mirror
#   hosts: ubuntu_debian_hosts
#   tasks:

#     # check for existing sources.list.bak
#     - name: check for existing sources.list
#       stat:
#         path: /etc/apt/sources.list
#       register: sources

#     - name: check for existing sources.list.bak
#       stat:
#         path: /etc/apt/sources.list.bak
#       register: backup

#     - debug:
#         msg:  "/etc/apt/sources.list exists"
#       when: sources.stat.exists

#     - debug:
#         msg:  "/etc/apt/sources.list does not exist"
#       when: not sources.stat.exists

#     - debug:
#         msg:  "/etc/apt/sources.list.bak exists"
#       when: backup.stat.exists

#     - debug:
#         msg:  "/etc/apt/sources.list.bak does not exist"
#       when: not backup.stat.exists



    # # regardless, remove the existing sources.list
    # - name: if the sources.list backup exists, remove sources.list
    #   file:
    #     path: /etc/apt/sources.list
    #     state:  absent
    #   when: src_bkup.stat.exists

    # # if it doesn't exist, back it on up
    # - name: if the sources.list backup exists, restore the backup
    #   copy:
    #     src:  /etc/apt/sources.list.bak
    #     dest: /etc/apt/sources.list
    #     remote_src: yes
    #   when: src_bkup.stat.exists

    # # link the new sources.list
    # - name: link sources.list
    #   file:
    #     src: /home/drake/dotfiles/apt_cache_mirror/sources.list
    #     dest: /etc/apt/sources.list
    #     state: link

- name: configure apt-cache host to use local apt-mirror
  hosts: apt_cache
  tasks:

    #   # check for existing sources.list
    # - name: check for existing sources.list
    #   stat:
    #     path: /etc/apt/sources.list
    #   register: sources

      # check for existing sources.list.bak
    - name: check for existing sources.list.bkup
      stat:
        path: /etc/apt/sources.list.bak
      register: src_backup

    # create backup if not present:
    - name: create sources.list backup if it isn't present
      copy:
        src:  /etc/apt/sources.list
        dest: /etc/apt/sources.list.bkup
        remote_src: yes
      when: not src_backup.stat.exists

    # regardless, copy the new one
    - name: copy the new config
      copy:
        src:  /home/drake/dotfiles/apt_cache_mirror/sources.list
        dest: /etc/apt/sources.list
        remote_src: yes

    # check for an existing docker.list backup
    - name: check for existing docker.list.bkup
      stat:
        path: /etc/apt/sources.list.d/docker.list.bkup
      register: docker_backup 

    # create backup if not present:
    - name: create docker.list backup if it isn't present
      copy:
        src:  /etc/apt/sources.list.d/docker.list
        dest: /etc/apt/sources.list.d/docker.list.bkup
        remote_src: yes
      when: not docker_backup.stat.exists
      
    # regardless, copy the new one
    - name: copy the new docker.list
      copy:
        src:  /home/drake/dotfiles/apt_cache_mirror/docker.list
        dest: /etc/apt/sources.list.d/docker.list
        remote_src: yes





    # - name: remove the existing sources.list
    #   file:
    #     path: /etc/apt/sources.list
    #     state:  absent
    
    # - name: link the new sources.list
    #   file:
    #     src: /home/drake/dotfiles/apt_cache_mirror/sources.list
    #     dest: /etc/apt/sources.list
    #     state: link
        
